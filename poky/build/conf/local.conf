# Where to cache the files Poky downloads
DL_DIR ?= "${OEROOT}/sources"
BBFILES += "\
    ${OEROOT}/meta/packages/*/*.bb \
    ${OEROOT}/meta-moblin/packages/*/*.bb"

BBFILE_COLLECTIONS = "normal moblin"
BBFILE_PATTERN_normal = "^${OEROOT}/meta/"
BBFILE_PATTERN_moblin = "^${OEROOT}/meta-moblin/"

BBFILE_PRIORITY_normal = "5"
BBFILE_PRIORITY_moblin = "5"

# Uncomment and set to allow bitbake to execute multiple tasks at once.
# For a quadcore, BB_NUMBER_THREADS = "4", PARALLEL_MAKE = "-j 4" would
# be appropriate.
# BB_NUMBER_THREADS = "4"
# Also, make can be passed flags so it run parallel threads e.g.:
# PARALLEL_MAKE = "-j 4"

# Enable SqueezeOS collections
BBFILES = "\
   ${OEROOT}/meta/packages/*/*.bb  \
   ${OEROOT}/meta-squeezeos/packages/*/*.bb \
   "
BBFILE_COLLECTIONS = "normal squeezeos"
BBFILE_PATTERN_normal = "^${OEROOT}/meta/"
BBFILE_PATTERN_squeezeos = "^${OEROOT}/meta-squeezeos/"
BBFILE_PRIORITY_normal = "5"
BBFILE_PRIORITY_squeezeos = "9"

# The machine to target
#MACHINE ?= "jive"
MACHINE ?= "baby"
#MACHINE ?= "qemuarm"

# Other supported machines
#MACHINE ?= "qemux86"
#MACHINE ?= "qemuarm"
#MACHINE ?= "c7x0"
#MACHINE ?= "akita"
#MACHINE ?= "spitz"
#MACHINE ?= "nokia770"
#MACHINE ?= "nokia800"
#MACHINE ?= "fic-gta01"
#MACHINE ?= "bootcdx86"
#MACHINE ?= "cm-x270"
#MACHINE ?= "em-x270"
#MACHINE ?= "htcuniversal"
#MACHINE ?= "mx31ads"
#MACHINE ?= "mx31litekit"
#MACHINE ?= "mx31phy"
#MACHINE ?= "zylonite"

CPU_FEATURES_arm = "thumb vfp"

DISTRO ?= "squeezeos"
# For bleeding edge / experimental / unstable package versions
# DISTRO ?= "poky-bleeding"

# Poky has various extra metadata collections (openmoko, extras).
# To enable these, uncomment all (or some of) the following lines:
# BBFILES = "\
#    ${OEROOT}/meta/packages/*/*.bb \
#    ${OEROOT}/meta-extras/packages/*/*.bb \
#    ${OEROOT}/meta-openmoko/packages/*/*.bb \
#    ${OEROOT}/meta-moblin/packages/*/*.bb \
#    "
# BBFILE_COLLECTIONS = "normal extras openmoko moblin"
# BBFILE_PATTERN_normal = "^${OEROOT}/meta/"
# BBFILE_PATTERN_extras = "^${OEROOT}/meta-extras/"
# BBFILE_PATTERN_openmoko = "^${OEROOT}/meta-openmoko/"
# BBFILE_PATTERN_moblin = "^${OEROOT}/meta-moblin/"
# BBFILE_PRIORITY_normal = "5"
# BBFILE_PRIORITY_extras = "5"
# BBFILE_PRIORITY_openmoko = "5"
# BBFILE_PRIORITY_moblin = "5"

BBMASK = ""

# EXTRA_IMAGE_FEATURES allows extra packages to be added to the generated images 
# (Some of these are automatically added to certain image types)
# "dbg-pkgs"     - add -dbg packages for all installed packages
#                  (adds symbol information for debugging/profiling)
# "dev-pkgs"     - add -dev packages for all installed packages
#                  (useful if you want to develop against libs in the image)
# "tools-sdk"      - add development tools (gcc, make, pkgconfig etc.)
# "tools-debug"    - add debugging tools (gdb, strace)
# "tools-profile"  - add profiling tools (oprofile, exmap, lttng valgrind (x86 only))
# "tools-testapps" - add useful testing tools (ts_print, aplay, arecord etc.)
# "debug-tweaks"   - make an image for suitable of development
#                    e.g. ssh root access has a blank password
# There are other application targets too, see meta/classes/poky-image.bbclass 
# and meta/packages/tasks/task-poky.bb for more details.

EXTRA_IMAGE_FEATURES = "tools-debug tools-profile tools-testapps debug-tweaks"

# The default IMAGE_FEATURES above are too large for the mx31phy and 
# c700/c750 machines which have limited space. The code below limits
# the default features for those machines.
EXTRA_IMAGE_FEATURES_c7x0 = "tools-testapps debug-tweaks"
EXTRA_IMAGE_FEATURES_mx31phy = "debug-tweaks"
EXTRA_IMAGE_FEATURES_mx31ads = "tools-testapps debug-tweaks"

# A list of packaging systems used in generated images
# The first package type listed will be used for rootfs generation
# include 'package_deb' for debs
# include 'package_ipk' for ipks
#PACKAGE_CLASSES ?= "package_deb package_ipk"
PACKAGE_CLASSES ?= "package_ipk"

# POKYMODE controls the characteristics of the generated packages/images by
# telling poky which type of toolchain to use.
#
# Options include several different EABI combinations and a compatibility 
# mode for the OABI mode poky previously used. 
#
# The default is "eabi"
# Use "oabi" for machines with kernels < 2.6.18 on ARM for example.
# Use "external-MODE" to use the precompiled external toolchains where MODE
# is the type of external toolchain to use e.g. eabi.
#POKYMODE = "external-csl2009q1"
#POKYMODE = "external-csl2009q3"
POKYMODE = "external-csl2010q1"
#POKYMODE = "external-csl2010.09"

# Uncomment this to specify where BitBake should create its temporary files.
# Note that a full build of everything in OpenEmbedded will take GigaBytes of hard
# disk space, so make sure to free enough space. The default TMPDIR is
# <build directory>/tmp
TMPDIR = "${OEROOT}/build/tmp-${MACHINE}"


# Uncomment this if you are using the Openedhand provided qemu deb - see README
# ASSUME_PROVIDED += "qemu-native"

# Comment this out if you don't have a 3.x gcc version available and wish
# poky to build one for you. The 3.x gcc is required to build qemu-native.
#ASSUME_PROVIDED += "gcc3-native"

# Uncomment these two if you want BitBake to build images useful for debugging.
# DEBUG_BUILD = "1"
# INHIBIT_PACKAGE_STRIP = "1"

# Uncomment these to build a package such that you can use gprof to profile it.
# NOTE: This will only work with 'linux' targets, not
# 'linux-uclibc', as uClibc doesn't provide the necessary
# object files.  Also, don't build glibc itself with these
# flags, or it'll fail to build.
#
# PROFILE_OPTIMIZATION = "-pg"
# SELECTED_OPTIMIZATION = "${PROFILE_OPTIMIZATION}"
# LDFLAGS =+ "-pg"

# Uncomment this if you want BitBake to emit debugging output
# BBDEBUG = "yes"
# Uncomment this if you want BitBake to emit the log if a build fails.
BBINCLUDELOGS = "yes"

# Specifies a location to search for pre-generated tarballs when fetching
# a cvs:// URI.  Uncomment this, if you not want to pull directly from CVS.
#CVS_TARBALL_STASH = "http://folks.o-hand.com/~richard/poky/sources/"

# Set this if you wish to make pkgconfig libraries from your system available 
# for native builds. Combined with extra ASSUME_PROVIDEDs this can allow 
# native builds of applications like oprofileui-native (unsupported feature).
#EXTRA_NATIVE_PKGCONFIG_PATH = ":/usr/lib/pkgconfig"
#ASSUME_PROVIDED += "gtk+-native libglade-native"

ENABLE_BINARY_LOCALE_GENERATION = "1"

# This overrides the entry in squeezos.conf
#SQUEEZECENTER_SCM = "svn://svn.slimdevices.com/repos/slim/7.7;proto=http"

# Enable the below to build wlan drivers / wps using private source
#SQUEEZEOS_PRIVATE_SVN = "xxxx"

# Lines with ## are used on the build server
##PREFERRED_PROVIDER_marvell-wlan-tools = "marvell-wlan-tools-src"
##PREFERRED_PROVIDER_marvell-gspi-module = "marvell-gspi-module-src"
##PREFERRED_PROVIDER_marvell-wps = "marvell-wps-src"
##PREFERRED_PROVIDER_atheros-ar6-module = "atheros-ar6-module-src"
##PREFERRED_PROVIDER_squeezeos-dsp = "squeezeos-dsp-src"
##ENABLE_SPPRIVATE = "yes"

##SRCREV_pn-marvell-wlan-tools-src = "${AUTOREV}"
##SRCREV_pn-marvell-gspi-module-src = "${AUTOREV}"
##SRCREV_pn-marvell-wps-src = "${AUTOREV}"
##SRCREV_pn-atheros-ar6-module-src = "${AUTOREV}"
##SRCREV_pn-squeezeplay-private = "${AUTOREV}"
##SRCREV_pn-squeezeos-dsp-src = "${AUTOREV}"
##SRCREV_pn-libspotify = "${AUTOREV}"

### Not ready to be built from source yet
###PREFERRED_PROVIDER_baby-msp430 = "baby-msp430-src"
###SRCREV_pn-baby-msp430-src = "${AUTOREV}"

# Use cache to prevent checking for package updates in svn
#BB_SRCREV_POLICY="cache"

# Set SVN to use --non-interactive to prevent hang failures
##FETCHCMD_svn = "/usr/bin/env svn --non-interactive"
